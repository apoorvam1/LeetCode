# n a array A of size 2N, there are N+1 unique elements, and exactly one of these elements is repeated N times.

# Return the element repeated N times.

# Example 1:

# Input: [1,2,3,3]
# Output: 3

# Example 2:
# Input: [2,1,2,5,3,2]
# Output: 2

# Example 3:
# Input: [5,1,5,2,5,3,5,4]
# Output: 5
 

# Note:

# 4 <= A.length <= 10000
# 0 <= A[i] < 10000
# A.length is even

# My Notes: Since N+1 elements are unique all the remaining N-1 numbers should be the same and match with one of those N+1     # unique numbers for it to repeat N times
# can use hashmap as well


class Solution {
    public int repeatedNTimes(int[] A) {
        Set<Integer> s = new HashSet<>();
        int repeated = -1; 
        for(int i = 0; i < A.length; i++) {
            if(s.add(A[i]) == false) {
                repeated = A[i]; 
            }
        }
        return repeated;
    }
}
