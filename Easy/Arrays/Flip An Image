# Given a binary matrix A, we want to flip the image horizontally, then invert it, and return the resulting image.

# To flip an image horizontally means that each row of the image is reversed.  For example, flipping [1, 1, 0] horizontally 
# results in [0, 1, 1].

# To invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0. For example, inverting [0, 1, 1] results 
# in [1, 0, 0].


# My Notes: check if all the steps are necessary or there is a special case that can solve the problem
# Matrix problems usually involve skipping the whole matrix interation

class Solution {
    public int[][] flipAndInvertImage(int[][] A) {
        for(int i = 0; i < A.length; i++){
            int low = 0;
            int high = A[0].length - 1;
            
            while(low < high) {
                // if numbers at low and high are different, reverse and flip is as good as not doing nothing
                // if numbers are same, you don't have to reverse as they are same so, just flip them
                if(A[i][low] == A[i][high]){
                    A[i][low] ^= 1;
                    A[i][high] ^= 1;
                }                
                low++;
                high--;
            }
            
            // handle the case when the length is odd
            if(low == high)
                A[i][low]^=1;
        }
        return A;
    }
}
