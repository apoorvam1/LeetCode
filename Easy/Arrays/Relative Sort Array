# Given two arrays arr1 and arr2, the elements of arr2 are distinct, and all elements in arr2 are also in arr1.

# Sort the elements of arr1 such that the relative ordering of items in arr1 are the same as in arr2.  
# Elements that don't appear in arr2 should be placed at the end of arr1 in ascending order.

# Example 1:

# Input: arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]
# Output: [2,2,2,1,4,3,3,9,6,7,19]


class Solution {
    public int[] relativeSortArray(int[] longarr, int[] shortarr) {
        // c is index to sorted elements so for longarr 
        int c = 0;
        for(int i = 0; i < shortarr.length; i++) {
            int j = c;
            while(j < longarr.length) {
                while(j < longarr.length && longarr[j] != shortarr[i])
                    j++;
                if(j < longarr.length && c < longarr.length) {
                    int temp = longarr[j];
                    longarr[j] = longarr[c];
                    longarr[c] = temp;
                    c++;
                    j++;
                }
            }
        }
        Arrays.sort(longarr, c, longarr.length);
        return longarr;
    }
}
