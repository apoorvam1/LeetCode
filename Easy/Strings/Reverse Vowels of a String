# Write a function that takes a string as input and reverse only the vowels of a string.

# Example 1:

# Input: "hello"
# Output: "holle"

#Example 2:
# Input: "leetcode"
# Output: "leotcede"


#Solution 1: With If check
class Solution {
    public String reverseVowels(String s) {
        if(s == null) return null;
        Character[] vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'};
         List<Character> list = Arrays.asList(vowels);
        char[] charr = s.toCharArray();
        int left = 0;
        int right = s.length()-1;
        
        while(left <= right) {
            if(list.contains(charr[left]) && list.contains(charr[right])) {
                char temp = charr[left];
                charr[left] = charr[right];
                charr[right] = temp;
                left++;
                right--;
            } else {
                if(!list.contains(charr[left])) {
                    left++;
                } 
                if(!list.contains(charr[right])) {
                    right--;
                } 
            }
        }
        
        return new String(charr);
    }
}

# Solution 2: With While loop
class Solution {
    public String reverseVowels(String s) {
        if (Objects.isNull(s)) return s;
        if (s.length() == 1) return s;

        int i = 0, j = s.length()-1;

        String vowels = "AEIOUaeiou";
        char[] chars = s.toCharArray();

        while (i < j) {
            while (i < j && vowels.indexOf(chars[i]) == -1) i++;
            while (i < j && vowels.indexOf(chars[j]) == -1) j--;

            char l = chars[i];
            char r = chars[j];

            chars[i] = r;
            chars[j] = l;
            
            j--;
            i++;
        }

        return new String(chars);
    }
}
