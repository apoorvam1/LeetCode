# Suppose you have n versions [1, 2, ..., n] and you want to find out the first bad one, which causes all the following ones 
# to be bad.

# You are given an API bool isBadVersion(version) which will return whether version is bad. Implement a function to find the
# first bad version. You should minimize the number of calls to the API.

# Example:
# Given n = 5, and version = 4 is the first bad version.
# call isBadVersion(3) -> false
# call isBadVersion(5) -> true
# call isBadVersion(4) -> true

# Then 4 is the first bad version. 

public class Solution extends VersionControl {
    public int firstBadVersion(int n) {
        // Since version starts from 1
        int low = 1;
        // Since n is the last version
        int high = n;
        while(low < high) {
            int mid = low + (high - low)/2;
            if(isBadVersion(mid)) {
                high = mid;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }
}
